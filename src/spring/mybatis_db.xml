<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
  <!-- 配置数据源(连接池，proxool) -->
  <bean id="dataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
    <property name="targetDataSource">
      <bean class="org.logicalcobwebs.proxool.ProxoolDataSource">
        <property name="driver" value="${jdbc.driverClassName}" />
        <property name="driverUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maximumConnectionCount" value="${proxool.maxConnCount}" />
        <property name="minimumConnectionCount" value="${proxool.minConnCount}" />
        <property name="statistics" value="${proxool.statistics}" />
        <property name="simultaneousBuildThrottle" value="${proxool.simultaneousBuildThrottle}" />
        <property name="trace" value="${proxool.trace}" />
      </bean>
    </property>
  </bean>
  <!-- Session工厂 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <!-- mybatis配置文件 -->
    <property name="configLocation" value="classpath:mybatis.xml" />
  </bean>
  <!-- 配置SqlSessionTemplate -->
  <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
    <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
  </bean>

  <!-- 事务管理器 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->
  <tx:annotation-driven transaction-manager="transactionManager" />
  <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <constructor-arg type="org.springframework.transaction.PlatformTransactionManager" ref="transactionManager" />
  </bean>
  <!-- 事务切面 -->
  <aop:aspectj-autoproxy proxy-target-class="true" />
  <tx:annotation-driven transaction-manager="transactionManager" />
  <aop:aspectj-autoproxy expose-proxy="true" />
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="save*" propagation="REQUIRED" />
      <tx:method name="add*" propagation="REQUIRED" />
      <tx:method name="create*" propagation="REQUIRED" />
      <tx:method name="insert*" propagation="REQUIRED" />
      <tx:method name="update*" propagation="REQUIRED" />
      <tx:method name="merge*" propagation="REQUIRED" />
      <tx:method name="del*" propagation="REQUIRED" />
      <tx:method name="remove*" propagation="REQUIRED" />
      <tx:method name="put*" propagation="REQUIRED" />
      <tx:method name="use*" propagation="REQUIRED" />
      <!-- hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
      <tx:method name="get*" propagation="REQUIRED" read-only="true" />
      <tx:method name="count*" propagation="REQUIRED" read-only="true" />
      <tx:method name="find*" propagation="REQUIRED" read-only="true" />
      <tx:method name="list*" propagation="REQUIRED" read-only="true" />
      <tx:method name="*" read-only="true" />
    </tx:attributes>
  </tx:advice>
  <aop:config>
    <!-- 只对业务逻辑层实施事务 -->
    <aop:pointcut id="txPointCut" expression="execution(* com.zwd.redis.model.dao.*.*(..))" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut" />
  </aop:config>
</beans>
